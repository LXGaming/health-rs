name: Rust

on:
  create:
    tags: [ 'v*.*.*' ]
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc

jobs:
  rust:
    strategy:
      matrix:
        include:
        - name: darwin-x64
          target: x86_64-apple-darwin
          os: macos-latest
        - name: darwin-arm64
          target: aarch64-apple-darwin
          os: macos-latest
        - name: linux-x64
          target: x86_64-unknown-linux-gnu
          os: ubuntu-latest
        - name: linux-arm64
          target: aarch64-unknown-linux-gnu
          os: ubuntu-latest
        - name: windows-x64
          target: x86_64-pc-windows-msvc
          os: windows-latest
        - name: windows-arm64
          target: aarch64-pc-windows-msvc
          os: windows-latest
    name: Rust (${{ matrix.name }})
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install AArch64 Toolchain
      if: matrix.target == 'aarch64-unknown-linux-gnu'
      run: |
        sudo apt-get update
        sudo apt-get install gcc-aarch64-linux-gnu
    - name: Setup Toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: nightly
        targets: ${{ matrix.target }}
    - name: Build
      run: cargo build --all-features --out-dir ./dist/${{ matrix.name }} --release --target ${{ matrix.target }} -Z unstable-options
    - name: Archive Binaries
      if: github.event_name == 'create' && github.event.ref_type == 'tag'
      run: |
        cd $GITHUB_WORKSPACE/dist/${{ matrix.name }} && 7z a -sdel ../${GITHUB_REPOSITORY#*/}-${{ matrix.name }}.zip .
    - name: Setup Release
      if: github.event_name == 'create' && github.event.ref_type == 'tag'
      run: echo "release_name=${GITHUB_REPOSITORY#*/} ${GITHUB_REF_NAME}" >> $GITHUB_ENV
    - name: Release
      if: github.event_name == 'create' && github.event.ref_type == 'tag'
      uses: softprops/action-gh-release@v1
      with:
        files: ./dist/*
        generate_release_notes: true
        name: ${{ env.release_name }}